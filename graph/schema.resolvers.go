package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.26

import (
	"context"
	"fmt"

	"github.com/potatowhite/books/file-service/graph/model"
)

// CreateRootFolder is the resolver for the createRootFolder field.
func (r *mutationResolver) CreateRootFolder(ctx context.Context, userID string) (*model.Folder, error) {
	panic(fmt.Errorf("not implemented: CreateRootFolder - createRootFolder"))
}

// CreateFolder is the resolver for the createFolder field.
func (r *mutationResolver) CreateFolder(ctx context.Context, userID string, name string, parentID string) (*model.Folder, error) {
	panic(fmt.Errorf("not implemented: CreateFolder - createFolder"))
}

// RenameFolder is the resolver for the renameFolder field.
func (r *mutationResolver) RenameFolder(ctx context.Context, userID string, id string, name string) (*model.Folder, error) {
	panic(fmt.Errorf("not implemented: RenameFolder - renameFolder"))
}

// DeleteFolder is the resolver for the deleteFolder field.
func (r *mutationResolver) DeleteFolder(ctx context.Context, userID string, id string) (bool, error) {
	panic(fmt.Errorf("not implemented: DeleteFolder - deleteFolder"))
}

// CreateFile is the resolver for the createFile field.
func (r *mutationResolver) CreateFile(ctx context.Context, userID string, name string, folderID string) (*model.File, error) {
	panic(fmt.Errorf("not implemented: CreateFile - createFile"))
}

// UpdateFile is the resolver for the updateFile field.
func (r *mutationResolver) UpdateFile(ctx context.Context, userID string, id string, name *string, typeArg *string, extension *string, size *int) (*model.File, error) {
	panic(fmt.Errorf("not implemented: UpdateFile - updateFile"))
}

// DeleteFile is the resolver for the deleteFile field.
func (r *mutationResolver) DeleteFile(ctx context.Context, userID string, id string) (bool, error) {
	panic(fmt.Errorf("not implemented: DeleteFile - deleteFile"))
}

// RootFolder is the resolver for the rootFolder field.
func (r *queryResolver) RootFolder(ctx context.Context, userID string) (*model.Folder, error) {
	panic(fmt.Errorf("not implemented: RootFolder - rootFolder"))
}

// Folder is the resolver for the folder field.
func (r *queryResolver) Folder(ctx context.Context, userID string, id string) (*model.Folder, error) {
	panic(fmt.Errorf("not implemented: Folder - folder"))
}

// File is the resolver for the file field.
func (r *queryResolver) File(ctx context.Context, userID string, id string) (*model.File, error) {
	panic(fmt.Errorf("not implemented: File - file"))
}

// ChildrenFolders is the resolver for the childrenFolders field.
func (r *queryResolver) ChildrenFolders(ctx context.Context, userID string, id string) ([]*model.Folder, error) {
	panic(fmt.Errorf("not implemented: ChildrenFolders - childrenFolders"))
}

// ChildrenFiles is the resolver for the childrenFiles field.
func (r *queryResolver) ChildrenFiles(ctx context.Context, userID string, id string) ([]*model.File, error) {
	panic(fmt.Errorf("not implemented: ChildrenFiles - childrenFiles"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
func (r *queryResolver) Folders(ctx context.Context, userID string, folderID string) ([]*model.Folder, error) {
	panic(fmt.Errorf("not implemented: Folders - folders"))
}
func (r *queryResolver) Files(ctx context.Context, userID string, folderID string) ([]*model.File, error) {
	panic(fmt.Errorf("not implemented: Files - files"))
}
